name: Deploy release
run-name: Deploy new ${{ inputs.bump_type }} release

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - minor
          - patch

permissions:
  contents: write

jobs:
  render_deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          ref: 'main'
          ssh-key: ${{ secrets.DEPLOY_PRIVATE_KEY }}

      - name: Check latest commit for tag
        run: |
          # Get the hash of the latest commit
          latest_commit=$(git rev-parse HEAD)

          # Check if the latest commit is already released
          if git describe --exact-match --tags $latest_commit >/dev/null 2>&1; then
            echo "The latest commit is already released."
            exit 1
          fi

      - name: Configure git
        run: |
          git config --local user.email "github-actions@github.com"
          git config --local user.name "GitHub Actions"

      - name: Perform version bump
        run: |
          if [ "${{ github.event.inputs.bump_type }}" = "minor" ]; then
            yarn version --minor
          elif [ "${{ github.event.inputs.bump_type }}" = "patch" ]; then
            yarn version --patch
          else
            echo "You must define the version bump after 'yarn deploy': patch or minor."
            exit 1
          fi

      - name: Commit changes
        run: |
          git push --follow-tags

      - name: HTTP Request Action
        id: http_request
        uses: fjogeleit/http-request-action@v1.16.3
        with:
          url: https://jsonplaceholder.typicode.com/todos/1
          method: GET
          
      - name: Print response
        run: echo Response status ${{ steps.http_request.outputs.status }}
      
      - name: Test curl
        run: |
          t=$(curl -s "https://jsonplaceholder.typicode.com/todos/1") && echo "$t" &
          r=$(curl -s "https://jsonplaceholder.typicode.com/todos/1") && echo "$r" &
          wait

      